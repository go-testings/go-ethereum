name: Build and Test

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CI:Build')
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: set tags
        id: set_tags
        run: |
          BRANCH="${{github.event.pull_request.base.ref}}"
          TAG=$(echo "${{github.sha}}" | cut -c 1-7)

          echo "MAIN=ghcr.io/go-ethereum/go-ethereum:${BRANCH}-latest, ghcr.io/go-ethereum/go-ethereum:${BRANCH}-${TAG}" >> $GITHUB_ENV
          echo "ALLTOOLS=ghcr.io/go-ethereum/go-ethereum_alltools:${BRANCH}, ghcr.io/go-ethereum/go-ethereum_alltools:${BRANCH}-${TAG}" >> $GITHUB_ENV

      - name: set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push MAIN
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci/Dockerfile
          tags: ${{ env.MAIN }}
          push: true
          labels: |
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/go-ethereum}}
          build-args: |
            COMMIT=${{ github.sha }}
            VERSION=${{ github.sha }}

      - name: Build and push ALLTOOLS
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci/Dockerfile.alltools
          tags: ${{ env.ALLTOOLS }}
          push: true
          labels: |
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/go-ethereum}}
          build-args: |
            COMMIT=${{ github.sha }}
            VERSION=${{ github.sha }}
