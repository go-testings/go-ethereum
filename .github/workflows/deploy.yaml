name: Deploy
on:
  pull_request:
    types: [closed]
    branches:
      - master
jobs:
  test:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CI:Deploy')
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd hardhat
          npm install

      - name: Compile contracts
        run: |
          cd hardhat
          npx hardhat compile

      - name: Run tests
        run: |
          cd hardhat
          npx hardhat test

  build:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CI:Deploy')
    name: Build
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: set tags
        id: set_tags
        run: |
          BRANCH="${{github.event.pull_request.base.ref}}"
          TAG=$(echo "${{github.sha}}" | cut -c 1-7)

          echo "DEVNET=ghcr.io/${{ github.repository }}/ethereum-devnet:${BRANCH}-latest, ghcr.io/${{ github.repository }}/ethereum-devnet:${BRANCH}-${TAG}" >> $GITHUB_ENV

      - name: set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push DEVNET
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci/Dockerfile.devnet
          tags: ${{ env.DEVNET }}
          push: true
          labels: |
            org.opencontainers.image.title=devnet
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.pull_request.merged_at }}
          build-args: |
            COMMIT=${{ github.sha }}
            VERSION=${{ github.sha }}
